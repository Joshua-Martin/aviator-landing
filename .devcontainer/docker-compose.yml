networks:
  demo-agent:
    driver: bridge

services:
  app:
    privileged: true
    platform: linux/arm64/v8
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm64/v8

    # Add memory limits and shared memory to prevent bus errors
    mem_limit: 8g
    shm_size: 4g

    volumes:
      - ..:/workspace:cached
      # Keep node_modules separate from host to prevent architecture/version conflicts
      # Root node_modules for shared dependencies
      - pnpm_root_node_modules:/workspace/node_modules
      # Individual package node_modules
      - pnpm_nest_node_modules:/workspace/packages/nest/node_modules
      - pnpm_react_ui_node_modules:/workspace/packages/react-ui/node_modules
      - pnpm_shared_node_modules:/workspace/packages/shared/node_modules

    environment:
      # Increase Node.js memory limits
      - NODE_OPTIONS=--max_old_space_size=8192

    # Connect the app to the same network as db and redis
    networks:
      - demo-agent

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: postgres:14.4
    platform: linux/arm64/v8
    environment:
      POSTGRES_DB: demo-agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: A79Vm5D4p2VQHOp2gd5
    networks:
      - demo-agent
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:7.0.7
    platform: linux/arm64/v8
    networks:
      - demo-agent
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'

volumes:
  postgres_data:
  redis_data:
  # pnpm monorepo node_modules volumes
  pnpm_root_node_modules:
  pnpm_nest_node_modules:
  pnpm_react_ui_node_modules:
  pnpm_shared_node_modules:
